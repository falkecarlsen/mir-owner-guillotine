// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
//fn main(_1: i32) -> () {
//    debug x => _1;                       // in scope 0 at src/lib.rs:1:9: 1:10
//    let mut _0: ();                      // return place in scope 0 at src/lib.rs:1:17: 1:17
//    let mut _2: i32;                     // in scope 0 at src/lib.rs:2:9: 2:14
//    let mut _3: i32;                     // in scope 0 at src/lib.rs:3:9: 3:10
//    let mut _4: (i32, bool);             // in scope 0 at src/lib.rs:4:9: 4:15
//    let mut _5: (i32, bool);             // in scope 0 at src/lib.rs:6:9: 6:15
//    scope 1 {
//        debug y => _2;                   // in scope 1 at src/lib.rs:2:9: 2:14
//    }

    // fake init for param, no worry that it's assigned and not abstract, as we don't do control flow analysis
    bb0: {
        _1 = const 42_i32;
        _2 = const 42_i32;               // scope 0 at src/lib.rs:2:22: 2:24
        _3 = _1;                         // scope 1 at src/lib.rs:3:9: 3:10
        switchInt(move _3) -> [0_i32: bb1, otherwise: bb3]; // scope 1 at src/lib.rs:3:8: 3:16
    }

    bb1: {
        _4 = CheckedAdd(_2, const 1_i32); // scope 1 at src/lib.rs:4:9: 4:15
        assert(!move (_4.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, const 1_i32) -> bb2; // scope 1 at src/lib.rs:4:9: 4:15
    }

    bb2: {
        _2 = move (_4.0: i32);           // scope 1 at src/lib.rs:4:9: 4:15
        goto -> bb5;                     // scope 1 at src/lib.rs:3:5: 7:6
    }

    bb3: {
        _5 = CheckedAdd(_2, const 2_i32); // scope 1 at src/lib.rs:6:9: 6:15
        assert(!move (_5.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, const 2_i32) -> bb4; // scope 1 at src/lib.rs:6:9: 6:15
    }

    bb4: {
        _2 = move (_5.0: i32);           // scope 1 at src/lib.rs:6:9: 6:15
        goto -> bb5;                     // scope 1 at src/lib.rs:3:5: 7:6
    }

    bb5: {
        return;                          // scope 0 at src/lib.rs:8:2: 8:2
        goto -> bb6;
    }

    bb6: {
        unreachable;
    }
//}