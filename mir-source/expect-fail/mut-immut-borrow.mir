bb0: {
    _1 = HashMap::new(const 42_u32); // make some var to ref to
    _2 = &(*_1); // immut ref to map for reading
    _3 = HashMap::<u32, String>::get::<u32>(move _2) -> bb1; // get val, semantics say result (loc 3) is now also a borrow of same type, to arg borrow (loc 2)
    _4 = &mut (*_1); // mut ref to map for writing
    _5 = ((_2 as Some).0: &std::string::String); // use of get-val, which generates liveness of borrow(3 -> 1), but mut borrow above?!
    _0 = &mut (*_4); // finally use of mut ref to map, which is made live here
    goto -> bb1;
}

bb1: {
   return;
}